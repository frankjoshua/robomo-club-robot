---
- hosts: robot
  vars:
    # ros_ip: '192.168.33.58'
    # ros_master_uri: 'http://192.168.33.58:11311'
    ros_ip: '{{ ansible_default_ipv4.address }}'
    ros_master_uri: 'http://{{ ansible_default_ipv4.address }}:11311'
    pull_image: true

  roles:
    - role: ansible-role-ros-master
      docker_users:
        - operator
        - vagrant
      become: yes
    - { role: ansible-role-ros-bridge-suite, become: yes }
    - { role: ansible-role-ros-webviz, become: yes }

  tasks:
    - name: Start Jviz docker container
      docker_container:
        name: 'ros_jviz'
        image: 'frankjoshua/ros-jviz'
        ports:
          - '8088:3000'
        restart_policy: 'unless-stopped'
        env:
          ROS_MASTER_URI: '{{ ros_master_uri }}'
          ROS_IP: '{{ ros_ip }}'

    - name: export ros_master_uri
      lineinfile:
        dest: /home/operator/.bashrc
        state: present
        regexp: '^export ROS_MASTER_URI='
        line: 'export ROS_MASTER_URI={{ ros_master_uri }}'
      become: yes

    - name: export ros_ip
      lineinfile:
        dest: /home/operator/.bashrc
        state: present
        regexp: '^export ROS_IP='
        line: 'export ROS_IP={{ ros_ip }}'
      become: yes

    - name: Create Volumes for ROS persistent storage
      docker_volume:
        name: '{{ item }}'
      with_items:
        - 'ros_move_base'
        - 'ros_jupyter'
        - 'ros_urdf'
        - 'ros_map_server'

    - name: Publish URDF
      docker_container:
        name: 'ros_urdf'
        image: 'frankjoshua/ros-urdf'
        network_mode: 'host'
        restart_policy: 'unless-stopped'
        volumes:
          - 'ros_urdf:/app'
        env:
          ROS_MASTER_URI: '{{ ros_master_uri }}'
          ROS_IP: '{{ ros_ip }}'
      become: yes

    - name: Start Map Server with Static Map
      docker_container:
        name: 'ros_map_server'
        image: 'frankjoshua/ros-map-server'
        network_mode: 'host'
        restart_policy: 'unless-stopped'
        volumes:
          - 'ros_map_server:/app'
        env:
          ROS_MASTER_URI: '{{ ros_master_uri }}'
          ROS_IP: '{{ ros_ip }}'
      become: yes

    - name: Start ROS Move Base node
      docker_container:
        name: 'ros_move_base'
        image: 'frankjoshua/ros-move-base'
        network_mode: 'host'
        restart_policy: 'unless-stopped'
        volumes:
          - 'ros_move_base:/app'
        env:
          ROS_MASTER_URI: '{{ ros_master_uri }}'
          ROS_IP: '{{ ros_ip }}'
        log_driver: json-file
        log_options:
          max-size: '10m'
          max-file: '3'
      become: yes

    - name: Start ROS Jupyter Notebook
      docker_container:
        name: 'ros_jupyter'
        image: 'frankjoshua/ros-jupyter'
        network_mode: 'host'
        restart_policy: 'unless-stopped'
        volumes:
          - 'ros_move_base:/home/jovyan/jupyter/ros_move_base'
          - 'ros_urdf:/home/jovyan/jupyter/ros_urdf'
          - 'ros_jupyter:/home/jovyan/jupyter'
          - 'ros_map_server:/home/jovyan/jupyter/ros_map_server'
        env:
          ROS_MASTER_URI: '{{ ros_master_uri }}'
          ROS_IP: '{{ ros_ip }}'
          JUPYTER_ENABLE_LAB: 'true'
          GRANT_SUDO: 'true'
        # Starts Jupyter so it does not require token or password to login
        command: "start-notebook.sh --ip='*' --NotebookApp.token='' --NotebookApp.password=''"
        user: root
      become: yes

    - name: Setup vscode sever to edit ROS config files
      docker_container:
        name: 'vs_code'
        image: 'codercom/code-server:latest'
        restart_policy: 'unless-stopped'
        volumes:
          - 'ros_move_base:/home/coder/project/ros_move_base'
          - 'ros_urdf:/home/coder/project/ros_urdf'
        ports:
          - '8880:8080'
        env:
          ROS_MASTER_URI: '{{ ros_master_uri }}'
          ROS_IP: '{{ ros_ip }}'
        user: root
      become: yes
