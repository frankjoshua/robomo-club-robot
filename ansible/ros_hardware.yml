---
- hosts: robot_hardware

  tasks:

    - name: Set permissions for teensy
      ansible.builtin.copy:
        src: files/udev/00-teensy.rules
        dest: /etc/udev/rules.d/00-teensy.rules
        owner: root
        group: root
        mode: '0644'
      become: yes
  
    - name: Deploy udev rule for USB devices
      copy:
        dest: /etc/udev/rules.d/99-usb-permissions.rules
        content: |
          # Set permissions for USB block devices to 0777
          SUBSYSTEM=="block", SUBSYSTEMS=="usb", MODE="0777"
        owner: root
        group: root
        mode: '0644'
      notify:
        - Reload udev rules
        - Trigger udev

    - name: ROS Hardware
      community.docker.docker_compose:
        project_src: '/home/{{ local_user }}/robomo-club-robot'
        files:
          - docker-compose-ros-hardware.yml
        state: present
        project_name: ros_hardware
      
    - name: Start Micro-ROS2 Agent
      docker_container:
        name: 'ros2_micro_ros_agent'
        image: 'frankjoshua/ros2-micro-ros-agent'
        network_mode: 'host'
        restart_policy: 'unless-stopped'
        privileged: yes
        devices:
          - "/dev/ttyACM0:/dev/ttyACM0"
        log_driver: json-file
        log_options:
          max-size: '10m'
          max-file: '3'
      become: yes

    - name: Start ydlidar_x4 laser Node
      docker_container:
        name: 'ros2_ydlidar_x4'
        image: 'frankjoshua/ros2-ydlidar-x4'
        network_mode: 'host'
        restart_policy: 'unless-stopped'
        privileged: yes
        log_driver: json-file
        log_options:
          max-size: '10m'
          max-file: '3'
      become: yes

    # - name: Start Diff drive controller
    #   docker_container:
    #     name: 'ros2_diff_drive_controller'
    #     image: 'frankjoshua/ros2-diff-drive-controller'
    #     network_mode: 'host'
    #     restart_policy: 'unless-stopped'
    #     privileged: yes
    #     log_driver: json-file
    #     log_options:
    #       max-size: '10m'
    #       max-file: '3'
    #   become: yes

    # - name: Start ROS2 Robot state publisher URDF
    #   docker_container:
    #     name: 'ros2_urdf'
    #     image: 'frankjoshua/ros2-urdf'
    #     network_mode: 'host'
    #     restart_policy: 'unless-stopped'
    #   become: yes

    # - name: Start ROS Realsense node
    #   docker_container:
    #     name: 'ros_realsense'
    #     image: 'frankjoshua/ros-realsense'
    #     network_mode: 'host'
    #     restart_policy: 'unless-stopped'
    #     volumes:
    #       - '/dev:/dev'
    #       - '{{ NOTEBOOK_LOCATION }}/ros_realsense:/app'
    #     privileged: yes
    #     env:
    #       ROS_MASTER_URI: '{{ ros_master_uri }}'
    #       ROS_IP: '{{ ros_ip }}'
    #     log_driver: json-file
    #     log_options:
    #       max-size: '10m'
    #       max-file: '3'
    #   become: yes
    #   ignore_errors: yes


  handlers:
    - name: Reload udev rules
      command: udevadm control --reload-rules
      become: yes

    - name: Trigger udev to apply new rules
      command: udevadm trigger
      become: yes